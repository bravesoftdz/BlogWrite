<Application x:Class="BlogWrite.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:BlogWrite"
             xmlns:vms ="clr-namespace:BlogWrite.ViewModels"
             StartupUri="Views\MainWindow.xaml"
             Startup="AppOnStartup">
    <Application.Resources>
        <ResourceDictionary>
            
            <vms:MainViewModel x:Key="MainViewModel" />

            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

            <ResourceDictionary.MergedDictionaries>
                
                <!-- FluentWPF
                https://github.com/sourcechord/FluentWPF -->
                <ResourceDictionary Source="pack://application:,,,/FluentWPF;component/Styles/Controls.xaml" />

                <!-- Colors -->
                <ResourceDictionary Source="Styles\Colors.xaml" />
                
                <!-- TreeView -->
                <ResourceDictionary>

                    <!-- Custom Dark Theme-->

                    <!--  http://arikalog.hateblo.jp/entry/2013/12/02/215401 
                    https://www.colordic.org/monotone/
                        -->

                    <Color x:Key="ContentAreaBackgroundColor">Black</Color>
                    
                    <Color x:Key="ControlTextColor">LightGray</Color>
                    
                    <Color x:Key="ControlBackgroundColor">Transparent</Color>
                    
                    <Color x:Key="SelectedBackgroundColor">Transparent</Color>

                    <Color x:Key="SelectedUnfocusedBackgroundColor">Transparent</Color>

                    <Color x:Key="SelectedTextColor">White</Color>


                    <SolidColorBrush x:Key="ContentAreaBackgroundBrush" Color="{StaticResource ContentAreaBackgroundColor}" />
                    <SolidColorBrush x:Key="ControlTextBrush" Color="{StaticResource ControlTextColor}" />
                    <SolidColorBrush x:Key="SelectedBackgroundColorBrush" Color="{StaticResource SelectedBackgroundColor}" />
                    <SolidColorBrush x:Key="SelectedUnfocusedColorBrush" Color="{StaticResource SelectedUnfocusedBackgroundColor}" />
                    <SolidColorBrush x:Key="SelectedTextColorBrush" Color="{StaticResource SelectedTextColor}" />


                    <!-- {DynamicResource {x:Static SystemColors.ControlTextBrushKey}} -->
                    

                    <!--Control colors.-->
                    <Color x:Key="WindowColor">#FFE8EDF9</Color>
                    <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
                    <Color x:Key="ContentAreaColorDark">#FF7381F9</Color>

                    <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
                    <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
                    <Color x:Key="DisabledForegroundColor">#FF888888</Color>



                    <Color x:Key="ControlLightColor">White</Color>
                    <Color x:Key="ControlMediumColor">#FF7381F9</Color>
                    <Color x:Key="ControlDarkColor">#FF211AA9</Color>

                    <Color x:Key="ControlMouseOverColor">White</Color>
                    <Color x:Key="ControlPressedColor">#FF211AA9</Color>


                    <Color x:Key="GlyphColor">#FF444444</Color>
                    <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

                    <!--Border colors-->
                    <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
                    <Color x:Key="BorderMediumColor">#FF888888</Color>
                    <Color x:Key="BorderDarkColor">#FF444444</Color>

                    <Color x:Key="PressedBorderLightColor">#FF888888</Color>
                    <Color x:Key="PressedBorderDarkColor">#FF444444</Color>

                    <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
                    <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

                    <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

                    <!--Control-specific resources.-->
                    <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
                    <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
                    <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

                    <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>

                    <LinearGradientBrush x:Key="MenuPopupBrush"
                     EndPoint="0.5,1"
                     StartPoint="0.5,0">
                        <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="0" />
                        <GradientStop Color="{DynamicResource ControlMediumColor}"
                Offset="0.5" />
                        <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="1" />
                    </LinearGradientBrush>

                    <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill"
                     StartPoint="0,0"
                     EndPoint="1,0">
                        <LinearGradientBrush.GradientStops>
                            <GradientStopCollection>
                                <GradientStop Color="#000000FF"
                    Offset="0" />
                                <GradientStop Color="#600000FF"
                    Offset="0.4" />
                                <GradientStop Color="#600000FF"
                    Offset="0.6" />
                                <GradientStop Color="#000000FF"
                    Offset="1" />
                            </GradientStopCollection>
                        </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>


                    <!-- 
                    Treeview
                     https://docs.microsoft.com/en-us/dotnet/framework/wpf/controls/treeview-styles-and-templates
                    -->


                    <Style x:Key="ExpandCollapseToggleStyle"
       TargetType="ToggleButton">
                        <Setter Property="Focusable"
          Value="False" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ToggleButton">
                                    <Grid Width="15"
              Height="13"
              Background="Transparent">
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CheckStates">
                                                <VisualState x:Name="Checked">
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                 Storyboard.TargetName="Collapsed">
                                                            <DiscreteObjectKeyFrame KeyTime="0"
                                            Value="{x:Static Visibility.Hidden}" />
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                 Storyboard.TargetName="Expanded">
                                                            <DiscreteObjectKeyFrame KeyTime="0"
                                            Value="{x:Static Visibility.Visible}" />
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Unchecked" />
                                                <VisualState x:Name="Indeterminate" />
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <Path x:Name="Collapsed"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Margin="1,1,1,1"
                Data="M 4 0 L 8 4 L 4 8 Z">
                                            <Path.Fill>
                                                <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                                            </Path.Fill>
                                        </Path>
                                        <Path x:Name="Expanded"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Margin="1,1,1,1"
                Data="M 0 4 L 8 4 L 4 8 Z"
                Visibility="Hidden">
                                            <Path.Fill>
                                                <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                                            </Path.Fill>
                                        </Path>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>


                    <Style x:Key="TreeViewItemFocusVisual">
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Border>
                                        <Rectangle Margin="0"
                     StrokeThickness="1"
                     Stroke="#CCCCCC"
                     StrokeDashArray="1 2" />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <!--
                    <Style x:Key="TreeViewItemFocusVisual">
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Border>
                                        <Rectangle Margin="0,0,0,0" StrokeThickness="5" Stroke="Black" StrokeDashArray="1 2" Opacity="0" />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    -->

                    <Style x:Key="TreeviewItemStyle" TargetType="{x:Type TreeViewItem}">
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Padding" Value="0" />
                        <Setter Property="Margin" Value="0 0 0 2"/>
                        <Setter Property="BorderThickness" Value="0 0 0 0"/>
                        <Setter Property="Foreground" Value="{StaticResource ControlTextBrush}" />
                        <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition MinWidth="19" Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="auto" />
                                            <RowDefinition />
                                        </Grid.RowDefinitions>
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="SelectionStates">
                                                <VisualState x:Name="Selected">
                                                    <Storyboard>
                                                        <ColorAnimationUsingKeyFrames 
                                                            Storyboard.TargetName="Bd" 
                                                            Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource SelectedBackgroundColor}" />
                                                        </ColorAnimationUsingKeyFrames>

                                                        <ColorAnimationUsingKeyFrames 
                                                            Storyboard.TargetName="Bd" 
                                                            Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource SelectedTextColor}" />
                                                        </ColorAnimationUsingKeyFrames>

                                                    </Storyboard> 
                                                </VisualState>
                                                <VisualState x:Name="Unselected">
                                                    <Storyboard>
                                                        <ColorAnimationUsingKeyFrames 
                                                            Storyboard.TargetName="Bd" 
                                                            Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlBackgroundColor}" />
                                                        </ColorAnimationUsingKeyFrames>

                                                        <ColorAnimationUsingKeyFrames 
                                                            Storyboard.TargetName="Bd" 
                                                            Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlTextColor}" />
                                                        </ColorAnimationUsingKeyFrames>

                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="SelectedInactive">
                                                    <Storyboard>
                                                        <ColorAnimationUsingKeyFrames 
                                                            Storyboard.TargetName="Bd" 
                                                            Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource SelectedUnfocusedBackgroundColor}" />
                                                        </ColorAnimationUsingKeyFrames>

                                                        <ColorAnimationUsingKeyFrames 
                                                            Storyboard.TargetName="Bd" 
                                                            Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource SelectedTextColor}" />
                                                        </ColorAnimationUsingKeyFrames>

                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                            <VisualStateGroup x:Name="ExpansionStates">
                                                <VisualState x:Name="Expanded">
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ItemsHost">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Collapsed" />
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <ToggleButton x:Name="Expander" 
                                                      Style="{StaticResource ExpandCollapseToggleStyle}" 
                                                      ClickMode="Press" 
                                                      IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent},Mode=TwoWay}"/>
                                        <Border x:Name="Bd" Grid.Column="1" 
                                                Background="{TemplateBinding Background}" 
                                                TextBlock.Foreground="{TemplateBinding Foreground}"
                                                BorderBrush="{TemplateBinding BorderBrush}" 
                                                BorderThickness="{TemplateBinding BorderThickness}" 
                                                Padding="{TemplateBinding Padding}"
                                                Margin="{TemplateBinding Margin}"
                                                CornerRadius="2">
                                            <ContentPresenter x:Name="PART_Header" 
                                                              ContentSource="Header" 
                                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>


                                            <Border.InputBindings>
                                                <MouseBinding Command="{Binding Path=DataContext.TreeviewLeftDoubleClickCommand,
                                                              RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=TreeView}}"
                                                              CommandParameter="{Binding Path=SelectedNode, 
                                                              RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=TreeView}}"
                                                              Gesture="LeftDoubleClick" />

                                            </Border.InputBindings>

                                        </Border>
                                        <ItemsPresenter x:Name="ItemsHost" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" Visibility="Collapsed" />
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="HasItems" Value="false">
                                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="HasHeader" Value="false" />
                                                <Condition Property="Width" Value="Auto" />
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="PART_Header" Property="MinWidth" Value="75" />
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="HasHeader" Value="false" />
                                                <Condition Property="Height" Value="Auto" />
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="PART_Header" Property="MinHeight" Value="19" />
                                        </MultiTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>

                        <Style.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True" />
                                    <Condition Property="IsSelected" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Foreground" Value="White" />
                            </MultiTrigger>
                            
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="TextElement.FontWeight" Value="Bold"/>
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>
                            
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True" />
                                    <Condition Property="IsSelected" Value="False" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Foreground" Value="White" />
                            </MultiTrigger>
                        </Style.Triggers>


                    </Style>
                
                </ResourceDictionary>

                <!-- ContextMenu -->
                <ResourceDictionary>
                    
                    <Style x:Key="ContextMenuStyleNotUsed" TargetType="{x:Type ContextMenu}">
                        <Setter Property="SnapsToDevicePixels"
          Value="True" />
                        <Setter Property="OverridesDefaultStyle"
          Value="True" />
                        <Setter Property="Grid.IsSharedSizeScope"
          Value="true" />
                        <Setter Property="HasDropShadow"
          Value="True" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ContextMenu}">
                                    <Border x:Name="Border"
                Background="{StaticResource MenuPopupBrush}"
                BorderThickness="1">
                                        <Border.BorderBrush>
                                            <SolidColorBrush Color="{StaticResource BorderMediumColor}" />
                                        </Border.BorderBrush>
                                        <StackPanel IsItemsHost="True"
                      KeyboardNavigation.DirectionalNavigation="Cycle" />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="HasDropShadow"
                   Value="true">
                                            <Setter TargetName="Border"
                    Property="Padding"
                    Value="0,3,0,3" />
                                            <Setter TargetName="Border"
                    Property="CornerRadius"
                    Value="4" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>


                    <!--Control colors.-->
                    <Color x:Key="WindowColor">#FFE8EDF9</Color>
                    <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
                    <Color x:Key="ContentAreaColorDark">#FF7381F9</Color>

                    <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
                    <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
                    <Color x:Key="DisabledForegroundColor">#FF888888</Color>

                    <Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
                    <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

                    <Color x:Key="ControlLightColor">White</Color>
                    <Color x:Key="ControlMediumColor">#FF7381F9</Color>
                    <Color x:Key="ControlDarkColor">#FF211AA9</Color>

                    <Color x:Key="ControlMouseOverColor">#FF3843C4</Color>
                    <Color x:Key="ControlPressedColor">#FF211AA9</Color>


                    <Color x:Key="GlyphColor">#FF444444</Color>
                    <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

                    <!--Border colors-->
                    <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
                    <Color x:Key="BorderMediumColor">#FF888888</Color>
                    <Color x:Key="BorderDarkColor">#FF444444</Color>

                    <Color x:Key="PressedBorderLightColor">#FF888888</Color>
                    <Color x:Key="PressedBorderDarkColor">#FF444444</Color>

                    <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
                    <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

                    <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

                    <!--Control-specific resources.-->
                    <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
                    <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
                    <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

                    <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>

                    <LinearGradientBrush x:Key="MenuPopupBrush"
                     EndPoint="0.5,1"
                     StartPoint="0.5,0">
                        <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="0" />
                        <GradientStop Color="{DynamicResource ControlMediumColor}"
                Offset="0.5" />
                        <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="1" />
                    </LinearGradientBrush>

                    <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill"
                     StartPoint="0,0"
                     EndPoint="1,0">
                        <LinearGradientBrush.GradientStops>
                            <GradientStopCollection>
                                <GradientStop Color="#000000FF"
                    Offset="0" />
                                <GradientStop Color="#600000FF"
                    Offset="0.4" />
                                <GradientStop Color="#600000FF"
                    Offset="0.6" />
                                <GradientStop Color="#000000FF"
                    Offset="1" />
                            </GradientStopCollection>
                        </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>

                </ResourceDictionary>

                <!-- TextBox -->
                <ResourceDictionary>

                    <Style x:Key="FlatTextBoxStyle" TargetType="{x:Type TextBox}">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Foreground" Value="Gainsboro"/>
                        <Setter Property="TextElement.Foreground" Value="Gainsboro"/>
                        <Setter Property="Padding" Value="4"/>
                        <Setter Property="CaretBrush" Value="WhiteSmoke"/>
                    </Style>

                    <Style x:Key="FlatTextBoxEditStyle" TargetType="{x:Type TextBox}">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="TextElement.Foreground" Value="White"/>
                        <Setter Property="Padding" Value="4"/>
                        <Setter Property="IsReadOnly" Value="False"/>
                        <Setter Property="TextWrapping" Value="Wrap"/>
                        <Setter Property="AcceptsTab" Value="True"/>
                        <Setter Property="AcceptsReturn" Value="True"/>
                        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
                        <Setter Property="AutoWordSelection" Value="True"/>
                        <Setter Property="CaretBrush" Value="WhiteSmoke"/>
                    </Style>

                    <Style x:Key="TransparentTextBoxStyle" TargetType="{x:Type TextBox}">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderThickness" Value="0 0 0 1"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="TextElement.Foreground" Value="White"/>
                        <Setter Property="Padding" Value="4"/>
                        <Setter Property="CaretBrush" Value="WhiteSmoke"/>
                    </Style>

                </ResourceDictionary>
                
                <!-- Flat ComboBox -->
                <ResourceDictionary>

                    <SolidColorBrush x:Key="ComboBoxNormalBorderBrush" Color="Transparent" />
                    <SolidColorBrush x:Key="ComboBoxNormalBackgroundBrush" Color="Transparent" />
                    <SolidColorBrush x:Key="ComboBoxDisabledForegroundBrush" Color="#888" />
                    <SolidColorBrush x:Key="ComboBoxDisabledBackgroundBrush" Color="#eee" />
                    <SolidColorBrush x:Key="ComboBoxDisabledBorderBrush" Color="#888" />

                    <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="18" />
                            </Grid.ColumnDefinitions>
                            <Border Name="Border" Grid.ColumnSpan="2"  
                                    BorderBrush="Gray" 
                                    CornerRadius="0" 
                                    BorderThickness="0" 
                                    Background="{StaticResource ComboBoxNormalBackgroundBrush}" />
                            <Border Name="ButtonBorder" Grid.Column="1" 
                                    CornerRadius="0" BorderThickness="0 0 0 0" BorderBrush="Transparent" Margin="1 1 1 0"
                                    Background="{StaticResource ComboBoxNormalBackgroundBrush}" >
                                <Path Name="Arrow" Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z" HorizontalAlignment="Center" 
                                      Fill="Gray" VerticalAlignment="Center"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsMouseOver" Value="True">
                                <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="Transparent"/>
                                <Setter Property="Shape.Fill" TargetName="Arrow" Value="WhiteSmoke"/>
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="True">
                                <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="Transparent"/>
                                <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="Transparent"/>
                                <Setter Property="Shape.Fill" TargetName="Arrow" Value="#FF8D979E"/>
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Property="Panel.Background" TargetName="Border" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                                <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
                                <Setter Property="Border.BorderBrush" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBorderBrush}"/>
                                <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                                <Setter Property="Shape.Fill" TargetName="Arrow" Value="#999"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>

                    <Style x:Key="ComboBoxFocusVisual">
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Border>
                                        <Rectangle Margin="2"
                     StrokeThickness="1"
                     Stroke="#CCCCCC"
                     StrokeDashArray="1 2" />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="ComboBoxFlatStyle"  TargetType="{x:Type ComboBox}">
                        <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
                        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="False"/>
                        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
                        
                        <!--
                        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ComboBoxFocusVisual}"/>
                        <Setter Property="TextElement.Foreground" Value="Black"/>
                        -->
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ComboBox">
                                    <Grid>
                                        <ToggleButton Name="ToggleButton" Grid.Column="2"
                                                      ClickMode="Press" 
                                                      Focusable="True" 
                                                      IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                                      Template="{StaticResource ComboBoxToggleButtonTemplate}" 
                                                      FocusVisualStyle="{StaticResource ComboBoxFocusVisual}"/>

                                        <ContentPresenter Name="ContentSite" 
                                                          Margin="5, 3, 23, 3" 
                                                          IsHitTestVisible="False"
                                                          HorizontalAlignment="Center" 
                                                          VerticalAlignment="Center" 
                                                          Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                                                          ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                                        <TextBox Name="PART_EditableTextBox" 
                                                 Margin="3, 3, 23, 3" 
                                                 IsReadOnly="{TemplateBinding IsReadOnly}"
                                                 Background="Transparent"
                                                 Foreground="Gray"
                                                 HorizontalAlignment="Left" 
                                                 VerticalAlignment="Center"
                                                 IsHitTestVisible="False"
                                                 SelectionBrush="Transparent"
                                                 Focusable="False" >
                                            <TextBox.Template>
                                                <ControlTemplate TargetType="TextBox" >
                                                    <Border Name="PART_ContentHost" Focusable="False" />
                                                </ControlTemplate>
                                            </TextBox.Template>
                                        </TextBox>
<!--
                                        <TextBlock x:Name="SelectMessage" 
                                                   HorizontalAlignment="Center" 
                                                   Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Tag}" 
                                                   VerticalAlignment="Center" 
                                                   Margin="{TemplateBinding Padding}" 
                                                   Visibility="Collapsed"
                                                   IsHitTestVisible="False"
                                                   TextElement.Foreground="White"
                                                   />
-->
                                        <!-- Popup showing items -->
                                        <Popup Name="Popup" 
                                               Placement="Bottom" 
                                               Focusable="False" 
                                               AllowsTransparency="True"
                                               IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                                               PopupAnimation="Slide"
                                               Margin="0">
                                            <Grid Name="DropDown" SnapsToDevicePixels="True"
                                                  MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                                                  MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                                <Border Name="DropDownBorder" Background="Gray" Margin="0, 0, 0, 0"
                                                        CornerRadius="0" BorderThickness="0" 
                                                        BorderBrush="Gray"/>
                                                <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                                </ScrollViewer>
                                            </Grid>
                                        </Popup>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="ItemsControl.HasItems" Value="False">
                                            <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
                                        </Trigger>
                                        <Trigger Property="UIElement.IsEnabled" Value="False">
                                            <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                                        </Trigger>
                                        <Trigger Property="ItemsControl.IsGrouping" Value="True">
                                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                                        </Trigger>
                                        <Trigger Property="ComboBox.IsEditable" Value="True">
                                            <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                                            <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                                            <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                                        </Trigger>
                                        <!--
                                        <Trigger Property="SelectedItem" Value="{x:Null}">
                                            <Setter Property="Visibility" TargetName="SelectMessage" Value="Visible"/>
                                        </Trigger>
                                        
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="TextElement.Foreground" TargetName="SelectMessage" Value="WhiteSmoke"/>
                                        </Trigger>
                                        -->
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="TextElement.Foreground" TargetName="PART_EditableTextBox" Value="WhiteSmoke"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <!-- End of Flat ComboBox -->



                </ResourceDictionary>

                <!-- PathButton -->
                <ResourceDictionary>
                    <!-- buttons 
                        https://docs.microsoft.com/en-us/dotnet/framework/wpf/controls/button-styles-and-templates
                    -->
                    <!--Control colors.-->
                    <Color x:Key="WindowColor">#FFE8EDF9</Color>
                    <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
                    <Color x:Key="ContentAreaColorDark">#FF7381F9</Color>

                    <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
                    <Color x:Key="DisabledControlDarkColor">Gray</Color>
                    <Color x:Key="DisabledForegroundColor">#FF888888</Color>

                    <Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
                    <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

                    <Color x:Key="ControlLightColor">White</Color>
                    <Color x:Key="ControlMediumColor">Silver</Color>
                    <Color x:Key="ControlDarkColor">#FFC5CBF9</Color>

                    <Color x:Key="ControlMouseOverColor">White</Color>
                    <Color x:Key="ControlPressedColor">Gray</Color>


                    <Color x:Key="GlyphColor">#FF444444</Color>
                    <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

                    <!--Border colors-->
                    <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
                    <Color x:Key="BorderMediumColor">#FF888888</Color>
                    <Color x:Key="BorderDarkColor">#FF444444</Color>

                    <Color x:Key="PressedBorderLightColor">#FF888888</Color>
                    <Color x:Key="PressedBorderDarkColor">#FF444444</Color>

                    <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
                    <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

                    <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

                    <!--Control-specific resources.-->
                    <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
                    <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
                    <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

                    <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>

                    <LinearGradientBrush x:Key="MenuPopupBrush"
                     EndPoint="0.5,1"
                     StartPoint="0.5,0">
                        <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="0" />
                        <GradientStop Color="{DynamicResource ControlMediumColor}"
                Offset="0.5" />
                        <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="1" />
                    </LinearGradientBrush>

                    <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill"
                     StartPoint="0,0"
                     EndPoint="1,0">
                        <LinearGradientBrush.GradientStops>
                            <GradientStopCollection>
                                <GradientStop Color="#000000FF"
                    Offset="0" />
                                <GradientStop Color="#CCCCCCCC"
                    Offset="0.4" />
                                <GradientStop Color="#DDDDDDDD"
                    Offset="0.6" />
                                <GradientStop Color="#000000FF"
                    Offset="1" />
                            </GradientStopCollection>
                        </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>


                    <!-- FocusVisual -->

                    <Style x:Key="ButtonFocusVisual">
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Border>
                                        <Rectangle Margin="2"
                     StrokeThickness="1"
                     Stroke="#CCCCCC"
                     StrokeDashArray="1 2" />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <!-- PathButton -->
                    <Style x:Key="PathButton" TargetType="Button">
                        <Setter Property="SnapsToDevicePixels" Value="true" />
                        <Setter Property="OverridesDefaultStyle" Value="true" />
                        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
                        <Setter Property="MinHeight" Value="18" />
                        <Setter Property="MinWidth" Value="18" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border x:Name="Border"
                                        TextBlock.Foreground="{TemplateBinding Foreground}"
                                        CornerRadius="2"
                                        BorderThickness="0">
                                        <Border.BorderBrush>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStopCollection>
                                                        <GradientStop Color="{DynamicResource BorderLightColor}" Offset="0.0" />
                                                        <GradientStop Color="{DynamicResource BorderDarkColor}" Offset="1.0" />
                                                    </GradientStopCollection>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Border.BorderBrush>
                                        <Border.Background>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0" Opacity="0">
                                                <GradientStop Color="{DynamicResource ControlLightColor}" Offset="0" />
                                                <GradientStop Color="{DynamicResource ControlMediumColor}" Offset="1" />
                                            </LinearGradientBrush>
                                        </Border.Background>
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualStateGroup.Transitions>
                                                    <VisualTransition GeneratedDuration="0:0:0.5" />
                                                    <VisualTransition GeneratedDuration="0" To="Pressed" />
                                                </VisualStateGroup.Transitions>
                                                <VisualState x:Name="Normal" >
                                                    <Storyboard>
                                                        <ColorAnimationUsingKeyFrames 
                                                            Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" 
                                                            Storyboard.TargetName="PathIcon">
                                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlDarkColor}"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="MouseOver">
                                                    <Storyboard>

                                                        <ColorAnimationUsingKeyFrames 
                                                            Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" 
                                                            Storyboard.TargetName="PathIcon">
                                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlMouseOverColor}"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                        <!--
                                                        <ColorAnimationUsingKeyFrames 
                                                            Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                            Storyboard.TargetName="Border">
                                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlMouseOverColor}" />
                                                        </ColorAnimationUsingKeyFrames>
                                                        -->

                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Pressed">
                                                    <Storyboard>


                                                        <ColorAnimationUsingKeyFrames 
                                                            Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" 
                                                            Storyboard.TargetName="PathIcon">
                                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlPressedColor}"/>
                                                        </ColorAnimationUsingKeyFrames>

                                                        <!--
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource ControlPressedColor}" />
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).
                      (GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource PressedBorderDarkColor}" />
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource PressedBorderLightColor}" />
                                                        </ColorAnimationUsingKeyFrames>
                                                         -->
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Disabled">
                                                    <Storyboard>

                                                        <ColorAnimationUsingKeyFrames 
                                                            Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)" 
                                                            Storyboard.TargetName="PathIcon">
                                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledControlDarkColor}"/>
                                                        </ColorAnimationUsingKeyFrames>


                                                        <!--
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource DisabledControlDarkColor}" />
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames
                      Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                                Storyboard.TargetName="Border">
                                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource DisabledForegroundColor}" />
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                Storyboard.TargetName="Border">
                                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource DisabledBorderDarkColor}" />
                                                        </ColorAnimationUsingKeyFrames>
                                                        -->
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <Path x:Name="PathIcon"
                                            Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"
                                            Stretch="Uniform"
                                            Fill="{TemplateBinding Foreground}"
                                            Stroke="Transparent"
                                            StrokeThickness="1"
                                            Margin="4"
                                            RenderTransformOrigin="0.5,0.5">
                                            <Path.RenderTransform>
                                                <TransformGroup>
                                                    <TransformGroup.Children>
                                                        <RotateTransform Angle="0" />
                                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                                    </TransformGroup.Children>
                                                </TransformGroup>
                                            </Path.RenderTransform>
                                        </Path>
                                        <!--
                                        <ContentPresenter Margin="2"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True" />
                                        -->
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsDefault"
                   Value="true">

                                            <Setter TargetName="Border"
                    Property="BorderBrush">
                                                <Setter.Value>
                                                    <LinearGradientBrush StartPoint="0,0"
                                     EndPoint="0,1">
                                                        <GradientBrush.GradientStops>
                                                            <GradientStopCollection>
                                                                <GradientStop Color="{DynamicResource DefaultBorderBrushLightBrush}"
                                    Offset="0.0" />
                                                                <GradientStop Color="{DynamicResource DefaultBorderBrushDarkColor}"
                                    Offset="1.0" />
                                                            </GradientStopCollection>
                                                        </GradientBrush.GradientStops>
                                                    </LinearGradientBrush>

                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>


                </ResourceDictionary>

                <!-- Listview -->
                <ResourceDictionary>
                    <!--
                    https://msdn.microsoft.com/en-us/library/ms788747(v=vs.85).aspx
                    -->
                    <Style x:Key="GridViewColumnHeaderGripperStyle" TargetType="Thumb">
                        <Setter Property="OverridesDefaultStyle" Value="False"/>
                        <Setter Property="Background">
                            <Setter.Value>
                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0,0.5" Opacity="0.4">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Offset="0.0" Color="WhiteSmoke" />
                                            <GradientStop Offset="1.0" Color="Black" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Thumb}">
                                    <Border Background="Transparent">
                                        <Rectangle HorizontalAlignment="Center" Width="2" Fill="{TemplateBinding Background}" />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="BorderBrush">
                            <Setter.Value>
                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                    <GradientStop Offset="0" Color="Black" />
                                    <GradientStop Offset="1" Color="White" />
                                </LinearGradientBrush>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    
                    <Style x:Key="GridViewColumnHeaderStyle" TargetType="GridViewColumnHeader">
                        <Setter Property="OverridesDefaultStyle" Value="False"/>
                        <Setter Property="Height" Value="24" />
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="TextElement.FontWeight" Value="Normal" />
                        <Setter Property="TextElement.Foreground" Value="LightGray" />
                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="GridViewColumnHeader">
                                    <Grid>
                                        <Border
                                                                        Name="HeaderBorder"
                                                                        Padding="10, 0, 2, 0"
                                                                        Background="Transparent"
                                                                        BorderBrush="Gray"
                                                                        BorderThickness="0,0,0,0">
                                            <ContentPresenter
                                                                            Name="HeaderContent"
                                                Margin="0,0,0,0"
                                                                            RecognizesAccessKey="True"
                                                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                            Content="{TemplateBinding Content}"
                                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        </Border>
                                        <!-- Simple disable colum header resize by removing this. -->
                                            <!--
                                        <Thumb x:Name="PART_HeaderGripper" 
                                                Style="{StaticResource GridViewColumnHeaderGripperStyle}" 
                                               HorizontalAlignment="Right" 
                                               Margin="0,0,-9,0" />
                                        -->

                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsPressed" Value="true">
                                            <Setter TargetName="HeaderContent" Property="Margin" Value="1,1,0,0" />
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter TargetName="HeaderBorder" Property="Opacity" Value=".5" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="Role" Value="Floating">
                                <Setter Property="Opacity" Value="0.7" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="GridViewColumnHeader">
                                            <Canvas Name="PART_FloatingHeaderCanvas">
                                                <Rectangle Fill="#60000000" 
                                                           Width="{TemplateBinding ActualWidth}" 
                                                           Height="{TemplateBinding ActualHeight}"/>
                                            </Canvas>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="Role" Value="Padding">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="GridViewColumnHeader">
                                            <Border Name="HeaderBorder"
              BorderThickness="0,1,0,1"
              BorderBrush="Transparent"
              Background="Transparent"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </Style.Triggers>
                    </Style>

                    <Style x:Key="ThumbStyle" TargetType="{x:Type Thumb}">
                        <Setter Property="Margin" Value="0,0,0,0" />
                        <Setter Property="Padding" Value="0,0,0,0" />
                        <Setter Property="BorderBrush" Value="Gray" />
                        <Setter Property="Background" Value="Gainsboro" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Thumb}">
                                    <Rectangle x:Name="Rect" Width="24">
                                        <Rectangle.Fill>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="Gainsboro" Offset="1" />
                                                <GradientStop Color="#ccc" />
                                            </LinearGradientBrush>
                                        </Rectangle.Fill>
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualState x:Name="Normal">
                                                    <Storyboard>
                                                        <!--
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).
                    (GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                                Storyboard.TargetName="Rect">
                                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="#CCC" />
                                                        </ColorAnimationUsingKeyFrames>
                                                        -->
                                                        <DoubleAnimationUsingKeyFrames  Storyboard.TargetProperty="Opacity"
                                                Storyboard.TargetName="Rect" >
                                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.1"/>
                                                        </DoubleAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="MouseOver">
                                                    <Storyboard>
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                                Storyboard.TargetName="Rect">
                                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="#CCC" />
                                                        </ColorAnimationUsingKeyFrames>
                                                        <DoubleAnimationUsingKeyFrames  Storyboard.TargetProperty="Opacity"
                                                Storyboard.TargetName="Rect" >
                                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.6"/>
                                                        </DoubleAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Pressed">
                                                    <Storyboard>
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                                Storyboard.TargetName="Rect">
                                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="Gray" />
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Disabled">
                                                    <Storyboard>
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                                Storyboard.TargetName="Rect">
                                                            <EasingColorKeyFrame KeyTime="0"
                                         Value="#eee" />
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                    </Rectangle>
                                    <!-- <Border CornerRadius="0" 
                                            Background="{TemplateBinding Background}" 
                                            BorderBrush="{TemplateBinding BorderBrush}" 
                                            BorderThickness="{TemplateBinding BorderThickness}" 
                                            Height="8" />
                                    -->
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="RepeatButtonStyleInc" TargetType="{x:Type RepeatButton}">
                        <Setter Property="Margin" Value="0,0,0,0" />
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                    <Border x:Name="Border" Margin="0" CornerRadius="0" BorderThickness="0">
                                        <Border.BorderBrush>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" Opacity="1">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStopCollection>
                                                        <GradientStop Color="{DynamicResource BorderMediumColor}" Offset="0.0" />
                                                        <GradientStop Color="{DynamicResource BorderDarkColor}" Offset="1.0" />
                                                    </GradientStopCollection>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Border.BorderBrush>
                                        <Border.Background>
                                            <LinearGradientBrush StartPoint="0,1" EndPoint="0,0" Opacity="0.1">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStopCollection>
                                                        <GradientStop Color="Transparent"/>
                                                        <GradientStop Color="Transparent" Offset="1.0" />
                                                    </GradientStopCollection>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Border.Background>
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualState x:Name="Normal" />
                                                <VisualState x:Name="MouseOver">
                                                    <Storyboard>
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                            <EasingColorKeyFrame KeyTime="0" Value="Gainsboro" />
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Pressed">
                                                    <Storyboard>
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlPressedColor}" />
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Disabled">
                                                    <Storyboard>
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledForegroundColor}" />
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <Path x:Name="Arrow"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Data="{Binding Content, 
                                            RelativeSource={RelativeSource TemplatedParent}}" >
                                            <Path.Fill>
                                                <SolidColorBrush Color="Gainsboro"/>
                                            </Path.Fill>
                                        </Path>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>

                    </Style>

                    <Style x:Key="RepeatButtonStyleDec" TargetType="{x:Type RepeatButton}">
                        <Setter Property="Margin" Value="0,0,0,0" />
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type RepeatButton}">
                                    <Border x:Name="Border" Margin="0" CornerRadius="0" BorderThickness="0">
                                        <Border.BorderBrush>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" Opacity="1">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStopCollection>
                                                        <GradientStop Color="{DynamicResource BorderMediumColor}" Offset="0.0" />
                                                        <GradientStop Color="{DynamicResource BorderDarkColor}" Offset="1.0" />
                                                    </GradientStopCollection>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Border.BorderBrush>
                                        <Border.Background>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" Opacity="0.1">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStopCollection>
                                                        <GradientStop Color="Transparent"/>
                                                        <GradientStop Color="Transparent" Offset="1.0" />
                                                    </GradientStopCollection>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Border.Background>
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualState x:Name="Normal" />
                                                <VisualState x:Name="MouseOver">
                                                    <Storyboard>
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                            <EasingColorKeyFrame KeyTime="0" Value="Gainsboro" />
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Pressed">
                                                    <Storyboard>
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlPressedColor}" />
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Disabled">
                                                    <Storyboard>
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledForegroundColor}" />
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <Path x:Name="Arrow"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Data="{Binding Content, 
                                            RelativeSource={RelativeSource TemplatedParent}}" >
                                            <Path.Fill>
                                                <SolidColorBrush Color="Gainsboro"/>
                                            </Path.Fill>
                                        </Path>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>

                    </Style>

                    <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition MaxHeight="18" />
                                <RowDefinition Height="0.00001*" />
                                <RowDefinition MaxHeight="18" />
                            </Grid.RowDefinitions>
                            <Border Grid.RowSpan="3" CornerRadius="0" Background="Transparent" />
                            <RepeatButton Grid.Row="0" Height="18" Command="ScrollBar.LineUpCommand"
                                          Content="M 0 4 L 8 4 L 4 0 Z" 
                                          Style="{StaticResource RepeatButtonStyleInc}"/>
                            <Track x:Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="ScrollBar.PageUpCommand" 
                                                  Style="{StaticResource RepeatButtonStyleDec}"/>
                                </Track.DecreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource ThumbStyle}"></Thumb>
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="ScrollBar.PageDownCommand" 
                                                  Style="{StaticResource RepeatButtonStyleInc}"/>
                                </Track.IncreaseRepeatButton>
                            </Track>
                            <RepeatButton Grid.Row="3" Height="18" Command="ScrollBar.LineDownCommand" 
                                          Content="M 0 0 L 4 4 L 8 0 Z" 
                                          Style="{StaticResource RepeatButtonStyleDec}"/>
                        </Grid>
                    </ControlTemplate>

                    <Style x:Key="ListviewFocusVisual">
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Border>
                                        <Rectangle Margin="2"
                     StrokeThickness="1"
                     Stroke="#CCCCCC"
                     StrokeDashArray="1 2" />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="ListViewItemStyle" TargetType="ListViewItem">
                        <Setter Property="FocusVisualStyle" Value="{StaticResource ListviewFocusVisual}"/>
                        <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListViewItem}">
                                    <Border Name="Border"
                                            Margin="{TemplateBinding Margin}"
                                            Padding="{TemplateBinding Padding}"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            ClipToBounds="{TemplateBinding ClipToBounds}"
                                            CornerRadius="0"
                                            SnapsToDevicePixels="true">

                                        <GridViewRowPresenter 
                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                                        <Border.InputBindings>
                                            <MouseBinding
                                                    Command="{Binding Path=DataContext.ListviewLeftDoubleClickCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}"
                                                    CommandParameter="{Binding Path=SelectedItem, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListView}}"
                                                    Gesture="LeftDoubleClick" />
                                        </Border.InputBindings>

                                    </Border>

                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                                <Setter Property="BorderBrush" Value="Transparent" />
                                <Setter Property="BorderThickness" Value="0,0,0,1" />
                            </Trigger>
                            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                <Setter Property="BorderBrush" Value="Transparent" />
                                <Setter Property="BorderThickness" Value="0,0,0,1" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="White" />
                                <Setter Property="BorderBrush" Value="Transparent" />
                                <Setter Property="BorderThickness" Value="0,0,0,1" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Foreground" Value="White" />
                                <Setter Property="TextElement.FontWeight" Value="Bold"/>
                                <Setter Property="BorderBrush" Value="Transparent" />
                                <!-- Or Gray -->
                                <Setter Property="BorderThickness" Value="0,0,0,1" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>

                </ResourceDictionary>

                <!-- GridSplitter -->
                <ResourceDictionary>

                    <ControlTemplate x:Key="VerticalSplitter" TargetType="{x:Type GridSplitter}">
                        <Grid>
                            <Path Data="M9,3H11V5H9V3M13,3H15V5H13V3M9,7H11V9H9V7M13,7H15V9H13V7M9,11H11V13H9V11M13,11H15V13H13V11M9,15H11V17H9V15M13,15H15V17H13V15M9,19H11V21H9V19M13,19H15V21H13V19Z"
                                                  Fill="Gray"
                                              Stretch="Uniform"
                                              Width="16"
                                              Height="16"
                                            Stroke="Transparent"
                                            StrokeThickness="1"
                                              RenderTransformOrigin="0.5,0.5">
                                <Path.RenderTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <RotateTransform Angle="0" />
                                            <ScaleTransform ScaleX="1" ScaleY="1" />
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Path.RenderTransform>
                            </Path>
                            <Rectangle Fill="#00FFFFFF" />
                        </Grid>
                    </ControlTemplate>
                    
                    <ControlTemplate x:Key="HolizontalSplitter" TargetType="{x:Type GridSplitter}">
                        <Grid>
                            <Path Data="M3,15V13H5V15H3M3,11V9H5V11H3M7,15V13H9V15H7M7,11V9H9V11H7M11,15V13H13V15H11M11,11V9H13V11H11M15,15V13H17V15H15M15,11V9H17V11H15M19,15V13H21V15H19M19,11V9H21V11H19Z"
                                                  Fill="Gray"
                                              Stretch="Uniform"
                                              Width="16"
                                              Height="16"
                                            Stroke="Transparent"
                                            StrokeThickness="1"
                                              RenderTransformOrigin="0.5,0.5">
                                <Path.RenderTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <RotateTransform Angle="0" />
                                            <ScaleTransform ScaleX="1" ScaleY="1" />
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Path.RenderTransform>
                            </Path>
                            <Rectangle Fill="#00FFFFFF" />
                        </Grid>
                    </ControlTemplate>

                    <!-- FocusVisual -->
                    <Style x:Key="GridSplitterFocusVisual">
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Border>
                                        <Rectangle Margin="2"
                     StrokeThickness="1"
                     Stroke="#CCCCCC"
                     StrokeDashArray="1 2" />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="GridSplitterStyle" TargetType="{x:Type GridSplitter}">
                        <Setter Property="FocusVisualStyle" Value="{StaticResource GridSplitterFocusVisual}"/>
                        <Setter Property="Template" Value="{StaticResource VerticalSplitter}"/>
                        <Style.Triggers>
                            <Trigger Property="ResizeDirection" Value="Rows">
                                <Setter Property="Height" Value="8" />
                                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="Template" Value="{StaticResource HolizontalSplitter}" />
                            </Trigger>
                            <Trigger Property="ResizeDirection" Value="Columns">
                                <Setter Property="Width" Value="8" />
                                <Setter Property="HorizontalAlignment" Value="Center"/>
                                <Setter Property="VerticalAlignment" Value="Stretch"/>
                                <Setter Property="Template" Value="{StaticResource VerticalSplitter}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ResourceDictionary>
                

            </ResourceDictionary.MergedDictionaries>


        </ResourceDictionary>
    </Application.Resources>
</Application>
